
##### TESTER

from loops_exercises import *

functions = [sum_natural_numbers, sum_powers, sum_digits, sum_digits_between_numbers, golden_ratio, multiplication_table]
args_num = [1,2,1,2,1,1]
test_cases = [
    [18, 37, 1568, 1284, 2, 54],
    [[15,2], [14,6], [22,4], [12,0], [542,1], [4,23]],
    [3483,16835,14682,1468,54,3551,68465454],
    [[15,20], [2,6], [5884,59154], [12, 357148], [1,245], [4887,38535]],
    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,32,45,63],
    [1,2,3,4,5,6,7,8,9,10,11,12]
    ]

results = [[171, 703, 1230096, 824970, 3, 1485], 
    [1240, 19092295, 1151403, 12, 147153, 70462895745100], 
    [18, 23, 21, 19, 9, 14, 42], 
    [42, 20, 1112715, 8374948, 2271, 666813], 
    [2.0, 1.5, 1.6666666666666665, 1.6, 1.625, 1.6153846153846154, 1.619047619047619, 1.6176470588235294, 1.6181818181818182, 1.6179775280898876, 1.6180555555555556, 1.6180257510729614, 1.6180371352785146, 1.6180327868852458, 1.618034447821682, 1.618033813400125, 1.618033988749859, 1.618033988749895, 1.618033988749895], 
    ['1', '1 2\n2 4', '1 2 3\n2 4 6\n3 6 9', '1 2 3 4\n2 4 6 8\n3 6 9 12\n4 8 12 16', '1 2 3 4 5\n2 4 6 8 10\n3 6 9 12 15\n4 8 12 16 20\n5 10 15 20 25', '1 2 3 4 5 6\n2 4 6 8 10 12\n3 6 9 12 15 18\n4 8 12 16 20 24\n5 10 15 20 25 30\n6 12 18 24 30 36', '1 2 3 4 5 6 7\n2 4 6 8 10 12 14\n3 6 9 12 15 18 21\n4 8 12 16 20 24 28\n5 10 15 20 25 30 35\n6 12 18 24 30 36 42\n7 14 21 28 35 42 49', '1 2 3 4 5 6 7 8\n2 4 6 8 10 12 14 16\n3 6 9 12 15 18 21 24\n4 8 12 16 20 24 28 32\n5 10 15 20 25 30 35 40\n6 12 18 24 30 36 42 48\n7 14 21 28 35 42 49 56\n8 16 24 32 40 48 56 64', '1 2 3 4 5 6 7 8 9\n2 4 6 8 10 12 14 16 18\n3 6 9 12 15 18 21 24 27\n4 8 12 16 20 24 28 32 36\n5 10 15 20 25 30 35 40 45\n6 12 18 24 30 36 42 48 54\n7 14 21 28 35 42 49 56 63\n8 16 24 32 40 48 56 64 72\n9 18 27 36 45 54 63 72 81', '1 2 3 4 5 6 7 8 9 10\n2 4 6 8 10 12 14 16 18 20\n3 6 9 12 15 18 21 24 27 30\n4 8 12 16 20 24 28 32 36 40\n5 10 15 20 25 30 35 40 45 50\n6 12 18 24 30 36 42 48 54 60\n7 14 21 28 35 42 49 56 63 70\n8 16 24 32 40 48 56 64 72 80\n9 18 27 36 45 54 63 72 81 90\n10 20 30 40 50 60 70 80 90 100', '1 2 3 4 5 6 7 8 9 10 11\n2 4 6 8 10 12 14 16 18 20 22\n3 6 9 12 15 18 21 24 27 30 33\n4 8 12 16 20 24 28 32 36 40 44\n5 10 15 20 25 30 35 40 45 50 55\n6 12 18 24 30 36 42 48 54 60 66\n7 14 21 28 35 42 49 56 63 70 77\n8 16 24 32 40 48 56 64 72 80 88\n9 18 27 36 45 54 63 72 81 90 99\n10 20 30 40 50 60 70 80 90 100 110\n11 22 33 44 55 66 77 88 99 110 121', '1 2 3 4 5 6 7 8 9 10 11 12\n2 4 6 8 10 12 14 16 18 20 22 24\n3 6 9 12 15 18 21 24 27 30 33 36\n4 8 12 16 20 24 28 32 36 40 44 48\n5 10 15 20 25 30 35 40 45 50 55 60\n6 12 18 24 30 36 42 48 54 60 66 72\n7 14 21 28 35 42 49 56 63 70 77 84\n8 16 24 32 40 48 56 64 72 80 88 96\n9 18 27 36 45 54 63 72 81 90 99 108\n10 20 30 40 50 60 70 80 90 100 110 120\n11 22 33 44 55 66 77 88 99 110 121 132\n12 24 36 48 60 72 84 96 108 120 132 144']
]

score = 0
max_score = 0

### Generate results from week#_solve
for i in range(len(functions)):         #For each function
    max_score += len(test_cases[i])
    func = functions[i]
    valid = 0
    submitted = 0
    for case in range(len(test_cases[i])):
        score += 1
        if args_num[i] == 1:
            res = func(test_cases[i][case])
        else:
            res = func(*test_cases[i][case])
        if type(results[i][case]) == float and res is not None:
            if round(results[i][case],3) != round(res,3):
                score -= 1
                if results[i][case] is not None and res is None:
                    submitted += 1
                else:
                    valid += 1
                    print("Wrong result, expected {}, received {}".format(results[i][case], res))
        else:
            if results[i][case] != res:
                score -= 1
                if results[i][case] is not None and res is None:
                    submitted += 1
                else:
                    valid += 1
                    print("Wrong result, expected {}, received {}".format(results[i][case], res))
    if submitted > 0:
        print("Exercise {} hasn't been submitted".format(i+1))
    elif valid == 0:        
        print("Exercise {} has valid solutions".format(i+1))

if score == 0:
    score_str = "0"
else:
    score_str = str(round(score/max_score*100, 1))
print("Your have finished {} % of this week exercises".format(score_str))
